plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
}

group = 'com.example'
version = '1.0.2'

java.sourceCompatibility = '17'

bootRun {
    environment 'SPRING_PROFILES_ACTIVE', System.getenv('SPRING_PROFILES_ACTIVE') ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.3.0')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
    implementation('org.webjars:bootstrap:5.3.3')
    implementation('org.webjars.npm:htmx.org:1.9.12')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0')
    implementation('io.swagger.core.v3:swagger-annotations:2.2.27')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.flywaydb:flyway-core')
    implementation('org.flywaydb:flyway-mysql')
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('me.paulschwarz:spring-dotenv:4.0.0')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-cache:3.3.5')
    implementation('com.github.librepdf:openpdf:1.3.39')
    implementation('com.auth0:java-jwt:4.4.0')
    implementation('com.google.zxing:core:3.5.1')
    implementation('com.google.zxing:javase:3.5.1')
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    annotationProcessor('org.projectlombok:lombok')
    compileOnly('org.projectlombok:lombok')
    runtimeOnly('com.mysql:mysql-connector-j')
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.10.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.10.1')
    testImplementation 'org.mockito:mockito-core:5.14.1'
    testImplementation 'org.junit.platform:junit-platform-launcher'

}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
